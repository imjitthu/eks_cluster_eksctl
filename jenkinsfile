pipeline {

    agent any

    parameters {
        choice(name: 'EKS_Cluster', choices: ['Create', 'Delete', 'Install DB & Cache', 'Install Components'], description: 'Pick option')
                }

    stages {
        stage ('Creating Eks Cluster') {
            when {
                expression {params.EKS_Cluster == 'Create'}
            }
            steps {
                sh '''
                eksctl create cluster -f cluster.yml
                '''
            }
        }
        stage ('Deleting Eks Cluster') {
            when {
                expression {params.EKS_Cluster == 'Delete'}
            }
            steps {
                sh '''
                eksctl delete cluster -f cluster.yml
                '''
            }
        }
        stage ('Installing DB and Cache Components') {
            when {
                expression {params.EKS_Cluster == 'Install DB & Cache'}
            }
            steps {
            sh "helm repo add stable https://charts.helm.sh/stable"
            sh "helm install redis stable/redis --set usePassword=false"
            sh "helm install mongodb bitnami/mongodb --set auth.enabled=false"
            sh "helm install rabbitmq bitnami/rabbitmq"
            sh "helm install mysql stable/mysql"
            }
        }
        stage ('Installing Roboshop Components') {
            steps {
                build 'Rs-Docker/cart'
                build 'Rs-Docker/catalogue'
                build 'Rs-Docker/shipping'
                build 'Rs-Docker/users'
                build 'Rs-Docker/payment'
                build job: 'Rs-Docker/WorkStation', parameters: [string(name: 'Workstation', value: 'Create POD')]
                build 'Rs-Docker/frontend'
            }
       } 
    }
}