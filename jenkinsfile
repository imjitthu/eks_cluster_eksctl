pipeline {

    agent any

    parameters {
        choice(name: 'EKS_Cluster', 
        choices: 
        [
            'Create cluster', 
            'Delete cluster', 
            'Configure Cluster',
            'Install Web UI', 
            'Install VPA'
        ], 
        description: 'Pick Option')
        }

    stages {
        stage ('Creating Eks Cluster') {
            when {expression {params.EKS_Cluster == 'Create cluster'}}
            steps {
                sh "eksctl create cluster -f cluster.yml"
                }
            }
        stage ('Configure Cluster') {
            when {expression {params.EKS_Cluster == 'Create cluster'}}
            steps {
                sh "sh iam-authenticator-eks.sh"
                sh "kubectl apply -f cluster_role_binding.yml"
                sh "kubectl apply -f metrics_server.yaml"
                }
            }
        stage ('Deleting Eks Cluster') {
            when {expression {params.EKS_Cluster == 'Delete cluster'}}
            steps {
                sh "eksctl delete cluster -f cluster.yml"
            }
        }
        stage ('Install Web UI') {
            when {expression {params.EKS_Cluster == 'Install Web UI'}}
            steps {
                sh "kubectl apply -f web-ui.yml"
                sh "kubectl apply -f dashboard-admin.yml"
            }
        }
        stage ('Installing VPA') {
            when {expression {params.EKS_Cluster == 'Install VPA'}}
            steps {
            git 'https://github.com/kubernetes/autoscaler.git'
            sh "sh vertical-pod-autoscaler/hack/vpa-up.sh"
            }
       }
       } 
    }